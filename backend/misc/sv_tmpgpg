#!/usr/bin/perl -T

# Called through Savnanah such as:
#   https://savannah.gnu.org/project/memberlist-gpgkeys.php?group=administration
# Which then calls this script to dump out the gpg keys.

# Copyright 2017 Bob Proulx <bob@proulx.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

use POSIX;
use DBI;
use IO::File;
use strict;

my $config = "/etc/savane/savane.ini";
my $dbuser = "savannahscripts";
my $dbpass = "nU9H35OE";
my $dbname = "savane";
my $dbhost = "internal0";

my $group_id = int($ARGV[0]);

open(FILE, "<$config")
    or die "Error: Could not open \"$config\": $!";

my $line;
while ($line = <FILE>) {
    chomp($line);
    $line =~ s/\s*#.*//;
    if ($line =~ m/^HOST=/) {
        # HOST=208.118.235.78
        $dbhost = (split('=',$line))[1];
    } elsif ($line =~ m/^NAME=/) {
        # NAME=savane
        $dbname = (split('=',$line))[1];
    } elsif ($line =~ m/^USER=/) {
        # USER=savannahscripts
        $dbuser = (split('=',$line))[1];
    } elsif ($line =~ m/^PASSWORD=/) {
        # PASSWORD=******
        $dbpass = (split('=',$line))[1];
    }
}

my $dbh = DBI->connect("DBI:mysql:$dbname:$dbhost", $dbuser, $dbpass,
                       { PrintError => 0, AutoCommit => 0 })
    or die "Error: connect: $DBI::errstr\n";

my $sql = "
SELECT gpg_key
    FROM user JOIN user_group ON user.user_id = user_group.user_id
        WHERE admin_flags<>'P' AND status='A' AND group_id=?
";

my $query = $dbh->prepare($sql);
$query->execute($group_id)
    or die $dbh->errstr;
$dbh->commit
    or die $dbh->errstr;

while (my @row = $query->fetchrow_array()) {
    my $keys = $row[0];
    printf("%s\n", join("\n", split('###', $keys)));
}

$dbh->disconnect() or die $dbh->errstr;

exit(0);
